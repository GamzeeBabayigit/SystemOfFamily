
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>View1</title>

    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="~/Content/Script/canvasjs.min.js"></script>
    <script src="~/Content/Script/canvasjs.react.js"></script>
    <script src="~/Content/Script/jquery.canvasjs.min.js"></script>

    <link href="~/Content/bootstrap-grid.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-reboot.min.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <style>
        body {
            font-family: sans-serif;
            max-width: 130em;
            margin: auto;
            padding: -1em;
        }

        b {
            color: ActiveBorder;
            font-family: 'Arial Nova';
            font-weight: 400;
        }



        table {
            width: 100%;
            background: #eee;
            padding: 1em;
            margin: 1em auto;
            box-sizing: border-box;
            border: 1px solid #ccc;
        }

        th {
            font-size: 1.2em;
        }

        td {
            font-weight: bold;
            border-bottom: 1px solid #fbfbfb;
            width: 20%;
            padding: .5em .25em;
            background-size: 0% 100%;
            background-repeat: no-repeat;
            -webkit-transition: all .75s ease-out;
            -moz-transition: all .75s ease-out;
            transition: all .75s ease-out;
        }

            td:nth-child(2) {
                width: 40%;
                color: white;
                text-shadow: 1px 2px #222;
                text-align: right;
                background-image: -webkit-linear-gradient(to left, green, green);
                background-image: -moz-linear-gradient(to left, green, green);
                background-image: linear-gradient(to left, green, green);
                background-position: right top;
            }

            td:nth-child(3) {
                width: 40%;
                color: white;
                text-shadow: 1px 2px #222;
                background-image: -webkit-linear-gradient(right, gray, gray);
                background-image: -moz-linear-gradient(right, yellow, gray);
                background-image: linear-gradient(right, gray, gray);
                background-position: left top;
            }
    </style>
    <style>
        .btn {
            border: 2px solid #87cefa;
        }

            .btn:hover {
                background-color: #87cefa;
            }

        th, td {
            text-align: left;
            padding: 8px;
        }

        .highcharts-figure, .highcharts-data-table table {
            min-width: 360px;
            max-width: 800px;
            margin: 1em auto;
        }

        .highcharts-data-table table {
            font-family: Verdana, sans-serif;
            border-collapse: collapse;
            border: 1px solid #EBEBEB;
            margin: 10px auto;
            text-align: center;
            width: 100%;
            max-width: 500px;
        }

        .highcharts-data-table caption {
            padding: 1em 0;
            font-size: 1.2em;
            color: #555;
        }

        .highcharts-data-table th {
            font-weight: 600;
            padding: 0.5em;
        }

        .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
            padding: 0.5em;
        }

        .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
            background: #f8f8f8;
        }

        .highcharts-data-table tr:hover {
            background: #f1f7ff;
        }
    </style>

</head>
<body>
    <div>

        <h5>Çalışma Ortamı İçin Önerilen Değerler</h5>
        <div>
            <h6 style="color:ActiveBorder;">Ortam Isısı</h6>
            <hr />
            <table style=" border-collapse: collapse; ">
                <tr>
                    <td>Oturarak Zihinsel İş</td>
                    <td>20-21°C</td>
                </tr>
                <tr>
                    <td>Oturarak Bedensel İş</td>
                    <td>18-19°C</td>
                </tr>
                <tr>
                    <td>Ayakta Ağır Bedensel İş</td>
                    <td>15-17°C</td>
                </tr>
            </table>
        </div>

        <h1>Sicakliğa Bağlı Hastalıklar</h1>
        <table>
            <tr><th></th><th>Alt Değer</th><th>Üst Değer</th></tr>
            <tr><td>İsilik</td><td>32</td><td>45</td></tr>
            <tr><td>Bakteri ve Mantar Enfeksiyonları</td><td>35</td><td>45</td></tr>
            <tr><td>Cilt Kuruluğu</td><td>5</td><td>11</td></tr>
            <tr><td>Atopik Egzama</td><td>20</td><td>30</td></tr>
            <tr><td>Kurdeşen</td><td>-2</td><td>34</td></tr>
            <tr><td>Sıcak Yorgunluğu</td><td>29</td><td>33</td></tr>
            <tr><td>Sıcak Çarpması</td><td>40,6</td><td>45</td></tr>
            <tr><td>Hipotermi</td><td>0</td><td>-20</td></tr>
        </table>

        <h2>Neme Bağlı Hastalıklar</h2>

        <table>
            <tr><th></th><th>%</th></tr>
            <tr><td>Pişik</td><td>80</td></tr>
            <tr><td>Mantar</td><td>70</td></tr>
            <tr><td>Astım</td><td>60</td></tr>

    </div>
    <script>
        var twoColComp = {
            init: function () {
                var tables = document.getElementsByTagName('table');

                // for each table
                for (var i = 0; i < tables.length; i++) {
                    // don't process one that's already been done (has class two-column-comp)
                    if (new RegExp('(^| )two-column-comp( |$)', 'gi').test(tables[i].className)) {
                        return;
                    }

                    //TODO: need to verify cross-browser support of these vars
                    var h = tables[i].clientHeight,
                      t = tables[i].getBoundingClientRect().top,
                      wT = window.pageYOffset || document.documentElement.scrollTop,
                      wH = window.innerHeight;

                    if (wT + wH > t + h / 2) {
                        this.make(tables[i]);
                    }
                }
            },

            make: function (el) {
                var rows = el.getElementsByTagName('tr'),
                  vals = [],
                  max,
                  percent;

                // for each row in the table, get vals
                for (var x = 0; x < rows.length; x++) {
                    var cells = rows[x].getElementsByTagName('td');
                    for (var y = 1; y < cells.length; y++) {
                        vals.push(parseInt(cells[y].innerHTML, 10));
                    }
                }

                max = Math.max.apply(Math, vals);
                percent = 100 / max;

                //for each row in the table, apply vals
                for (x = 0; x < rows.length; x++) {
                    var cells = rows[x].getElementsByTagName('td');
                    for (var y = 1; y < cells.length; y++) {
                        var currNum = parseInt(cells[y].innerHTML, 10);
                        cells[y].style.backgroundSize = percent * currNum + "% 100%";
                        cells[y].style.transitionDelay = x / 20 + "s";
                    }
                }
                //add a class so you don't process it a bunch of times
                el.className = +" two-column-comp"
            } // end make
        }

        window.onload = function () {
            twoColComp.init();
        }

        window.onscroll = function () {
            twoColComp.init();
        }</script>

    </div>
</body>
</html>
